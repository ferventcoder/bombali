<?xml version="1.0" encoding="utf-8" ?>
<project name="VersionBuilder" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - This creates the assembly file to be used by the rest of the application - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="project.name" value="__SOLUTION_NAME_WITHOUT_SLN_EXTENSION__" overwrite="false" />
  <property name="path_to_solution" value="." overwrite="false" />
  <property name="version.major" value="1" overwrite="false" />
  <property name="version.minor" value="0" overwrite="false" />
  <property name="company.name" value="__COMPANY_NAME__" overwrite="false" />
  <property name="language.short" value="cs" overwrite="false" />
  <property name="allow.partially_trusted_callers" value="true" overwrite="false" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="version.build" value="0" overwrite="false" />
  <property name="version.revision" value="0" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}\..\build_output" overwrite="false" />
  <property name="language.long" value="CSharp" />
  <property name="file.custom.step.before" value="${dirs.current}\..\build.custom\versionBuilder.pre.step" />
  <property name="file.custom.step.after" value="${dirs.current}\..\build.custom\versionBuilder.post.step" />
  <property name="file.custom.step.replace" value="${dirs.current}\..\build.custom\versionBuilder.replace.step" />

  <target name="go" depends="run_tasks" />

  <target name="run_tasks">
    <echo message="Running ${project::get-name()} tasks." />
    <call target="prepare" if="${target::exists('prepare')}" />
    <call target="custom_tasks_before" if="${target::exists('custom_tasks_before')}"  />
    <call target="run_normal_tasks" if="${not file::exists(file.custom.step.replace)}" />
    <echo message="Running custom tasks instead of normal tasks if ${file.custom.step.replace} exists." />
    <nant buildfile="${file.custom.step.replace}" inheritall="true" if="${file::exists(file.custom.step.replace)}" />
    <call target="custom_tasks_after" if="${target::exists('custom_tasks_after')}" />
  </target>

  <target name="run_normal_tasks"
          depends="error_check, determine_language, generate_assembly_info"
          description="Generating Assembly File." />

  <target name="custom_tasks_before">
    <echo message="Running custom tasks if ${file.custom.step.before} exists." />
    <nant buildfile="${file.custom.step.before}" inheritall="true" if="${file::exists(file.custom.step.before)}" failonerror="false" />
  </target>

  <target name="error_check">
    <fail message="You must provide arguments to the command line like this __master.build -D:project.name='SOLUTION_NAME_WITHOUT_EXTENSION' -D:repository.path='FULL_PATH_TO_REPOSITORY' -D:company.name='Company name' or pass the build configuration settings file __master.build -D:build.config.settings='Settings\Uppercut.config"
      if="${project.name=='__SOLUTION_NAME_WITHOUT_SLN_EXTENSION__' or company.name=='__COMPANY_NAME__'}" />
  </target>

  <target name="determine_language">
    <if test="${language.short=='vb'}">
      <property name="language.long" value="VB" />
    </if>
  </target>

  <target name="generate_assembly_info" description="Generate assembly info">
    <echo message="Generating SolutionVersion.${language.short} with assembly version ${version.major}.${version.minor}.${version.build}.${version.revision}." />
    <asminfo output="${dirs.current}\..\${path_to_solution}\SolutionVersion.${language.short}" language="${language.long}">
      <imports>
        <import namespace="System" />
        <import namespace="System.Reflection" />
        <import namespace="System.Runtime.InteropServices" />
        <import namespace="System.Security" />
      </imports>
      <attributes>
        <attribute type="ComVisibleAttribute" value="false" />
        <attribute type="CLSCompliantAttribute" value="true" />
        <attribute type="AssemblyVersionAttribute" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
        <attribute type="AssemblyTitleAttribute" value="${project.name}" />
        <attribute type="AssemblyProductAttribute" value="${project.name}" />
        <attribute type="AssemblyDescriptionAttribute" value="For the exclusive use of ${company.name}." />
        <attribute type="AssemblyTrademarkAttribute" value="All rights reserved, ${company.name}" />
        <attribute type="AssemblyFileVersionAttribute" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
        <attribute type="AssemblyCopyrightAttribute" value="${company.name}, original author or authors" />
        <attribute type="AssemblyCompanyAttribute" value="${company.name}" />
        <attribute type="AllowPartiallyTrustedCallers" if="${allow.partially_trusted_callers}" asis="true" />
      </attributes>
    </asminfo>
  </target>

  <target name="custom_tasks_after">
    <echo message="Running custom tasks if ${file.custom.step.after} exists." />
    <nant buildfile="${file.custom.step.after}" inheritall="true" if="${file::exists(file.custom.step.after)}" failonerror="false" />
  </target>

</project>