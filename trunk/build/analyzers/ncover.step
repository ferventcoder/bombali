<?xml version="1.0" encoding="utf-8" ?>
<project name="NCover" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - NCover uses MbUnit to run tests - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="project.name" value="__SOLUTION_NAME_WITHOUT_SLN_EXTENSION__" overwrite="false" />
  <property name="test.framework" value="mbunit" overwrite="false" />
  <property name="number.satisfactory_coverage" value="85" overwrite="false" />
  <property name="fail.if_ncover_fails" value="false" overwrite="false" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="dirs.lib" value="${dirs.current}\..\..\lib" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}\..\..\build_output" />
  <property name="dirs.build_artifacts" value="${dirs.build}\build_artifacts" />
  <property name="dirs.ncover_results" value="${path::get-full-path(dirs.build_artifacts)}\ncover" />

  <property name="app.ncover.tester" value="${path::get-full-path(dirs.lib)}\references\MbUnit2\MbUnit.Cons.exe" overwrite="false" />
  <property name="app.ncover" value="${path::get-full-path(dirs.lib)}\tools\NCover\NCover.Console.exe" overwrite="false" />
  <property name="app.ncover_explorer" value="${path::get-full-path(dirs.lib)}\tools\NCover\NCoverExplorer.Console.exe" overwrite="false" />

  <property name="file.ncover_results" value="${dirs.ncover_results}\${project.name}.ncover.xml" />
  <property name="file.ncover_log" value="${dirs.ncover_results}\${project.name}.ncover.log" />
  <property name="file.xml.code_coverage_results" value="${project.name}.CodeCoverageSummary-results.xml" />
  <property name="file.html.code_coverage_results" value="${project.name}.CodeCoverageSummary-results.html" />
  <property name="tests.excluded_categories.comma_separated" value="Database,Integration,Slow,NotWorking" overwrite="false" />
  <property name="test.args" value="" />
  <property name="test.args" value="/rt:Text /rnf:mbUnit /rf:${dirs.ncover_results} /ec:${tests.excluded_categories.comma_separated}" if="${test.framework=='mbunit2'}" />
  <property name="test.args" value="/xml:${dirs.ncover_results}\nunit-results.xml /nologo /exclude:${tests.excluded_categories.comma_separated}" if="${test.framework=='nunit'}" />

  <target name="go" depends="cleanup, get_test_dlls, ncover, ncover_explorer" description="Using NCover to Analyze project for test quality indicators." if="${file::exists(app.ncover)}" />

  <target name="cleanup">
    <echo message="Removing and adding ${dirs.ncover_results}."/>
    <delete dir="${dirs.ncover_results}" failonerror="false" />
    <mkdir dir="${dirs.ncover_results}" />
  </target>

  <target name="get_test_dlls">
    <echo message="Getting test dlls based on name in directory ${path::get-full-path(dirs.build)}." />
    <property name="dll.names" value="" />
    <foreach item="File" property="dll.filename">
      <in>
        <items>
          <exclude name="${dirs.build}\*Database*dll" />
          <exclude name="${dirs.build}\*.Integration*dll" />
          <exclude name="${dirs.build}\TestFu.dll" />
          <include name="${dirs.build}\*Test*dll" />
        </items>
      </in>
      <do>
        <property name="dll.names" value="${dll.names + ' ' + path::get-file-name(dll.filename)}" />
      </do>
    </foreach>

    <property name="dlls.test" value="${dll.names}" />
    <echo message="Running NCover against these test dlls - ${dlls.test}." />

    <property name="args.test_runner" value="${dlls.test} ${test.args}" />
  </target>

  <target name="ncover" if="${file::exists(app.ncover)}" >
    <echo message="Attempting to run NCover. Creating file at ${file.ncover_results} and logging at ${file.ncover_log}." />
    <ncover program="${app.ncover}"
        commandLineExe="${app.ncover.tester}"
        commandLineArgs="${args.test_runner}"
        workingDirectory="${dirs.build}"
        coverageFile="${file.ncover_results}"
        logLevel="Normal"
        logFile="${file.ncover_log}"
        excludeAttributes="CoverageExcludeAttribute"
        failonerror="false"
        verbose="true">
      <assemblies basedir="${dirs.build}">
        <exclude name="${dirs.build}\*Test*dll" />
        <include name="${dirs.build}\${project.name}*.dll" />
      </assemblies>
    </ncover>
  </target>

  <target name="ncover_explorer" depends="ncover">
    <echo message="Attempting to run NCoverExplorer. Creating HTML results file at ${file.html.code_coverage_results} and XML results file at ${file.xml.code_coverage_results}." />
    <ncoverexplorer
      program="${app.ncover_explorer}"
      projectName="${project.name}"
      reportType="4"
      outputDir="${dirs.ncover_results}"
      xmlReportName="${file.xml.code_coverage_results}"
      htmlReportName="${file.html.code_coverage_results}"
      showExcluded="True"
      satisfactoryCoverage="${number.satisfactory_coverage}"
      failMinimum="false"
      failonerror="false"
      >
      <fileset>
        <include name="${file.ncover_results}" />
      </fileset>
      <exclusions>
        <exclusion enabled="true" isRegex="false" pattern="*Test*" type="Assembly" />
        <exclusion enabled="true" isRegex="false" pattern="*Test*" type="Namespace" />
        <exclusion enabled="true" isRegex="false" pattern="*.My*" type="Namespace" />
        <exclusion enabled="true" isRegex="false" pattern="*.bdd*" type="Namespace" />
        <exclusion enabled="true" isRegex="false" pattern="when*" type="Class" />
        <exclusion enabled="true" isRegex="false" pattern="concern*" type="Class" />
      </exclusions>
    </ncoverexplorer>
  </target>

  <target name="open_results">
    <echo message="Opening results at ${path::get-full-path(dirs.ncover_results)}\${file.html.code_coverage_results}."/>
    <exec
      spawn="true"
      program="${environment::get-folder-path('ProgramFiles')}\Internet Explorer\iexplore.exe"
      commandline="${path::get-full-path(dirs.ncover_results)}\${file.html.code_coverage_results}"
      >
    </exec>
  </target>

</project>