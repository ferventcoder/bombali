<?xml version="1.0" encoding="utf-8" ?>
<project name="MasterBuildFile" default="go">
  <!-- Project UppercuT - http://uppercut.googlecode.com -->
  <!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="repository.path" value="__REPOSITORY_PATH__" overwrite="false" />
  <property name="source_control_type" value="svn" overwrite="false" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="file.custom.master.build" value="${dirs.current}\..\BuildScripts.Custom\__master.build" overwrite="false" />
  <property name="version.revision" value="0" />
  <property name="version.build" value="0" />
  <property name="dirs.build" value="${dirs.current}\..\build_output" />
  <property name="dirs.drop" value="${dirs.current}\..\code_drop" overwrite="false" />

  <target name="go" depends="error_check, build, custom_tasks" description="Building" />

  <target name="error_check">
    <fail message="You must provide arguments in your command line call like this: __master.build -D:project.name='SOLUTION_NAME_WITHOUT_EXTENSION' -D:repository.path='FULL_PATH_TO_REPOSITORY'"
      if="${repository.path=='__REPOSITORY_PATH__'}" />
  </target>

  <target name="build">
    <call target="get_revision" />

    <property name="version.build" value="${environment::get-variable('CCNetNumericLabel')}" if="${environment::variable-exists('CCNetNumericLabel')}" />
    <property name="dirs.drop" value="${environment::get-variable('CCNetArtifactDirectory')}\b${version.build}-r${version.revision}" if="${environment::variable-exists('CCNetArtifactDirectory')}" />

    <nant buildfile="${dirs.current}\_generate_assembly.build" inheritall="true" />
    <nant buildfile="${dirs.current}\_generate_buildinfo.build" inheritall="true" />
    <nant buildfile="${dirs.current}\_compile.build" inheritall="true" />
    <nant buildfile="${dirs.current}\_analyze.build" inheritall="true" />
    <nant buildfile="${dirs.current}\_configurations.build" inheritall="true" />
    <nant buildfile="${dirs.current}\_package.build" inheritall="true" />
  </target>

  <target name="custom_tasks">
    <echo message="Running custom master tasks if ${file.custom.master.build} exists." />
    <nant buildfile="${file.custom.master.build}" inheritall="true" if="${file::exists(file.custom.master.build)}" failonerror="false" />
  </target>

  <target name="get_revision">
    <call target="svn_get_revision" if="${source_control_type=='svn'}" />
    <call target="git_get_revision" if="${source_control_type=='git'}" />
    <call target="vss_get_revision" if="${source_control_type=='vss'}" />
    <call target="tfs_get_revision" if="${source_control_type=='tfs'}" />
    <call target="vault_get_revision" if="${source_control_type=='vault'}" />
  </target>

  <target name="svn_get_revision" description="Gets the current revision number">
    <echo message="Getting revision number for ${repository.path}."/>
    <!-- try to update the revision -->
    <exec
      program="svn"
      commandline="info ${repository.path} --xml"
      output="_revision.xml"
      failonerror="false"/>
    <xmlpeek
      file="_revision.xml"
      xpath="/info/entry/@revision"
      property="version.revision"
      failonerror="false"/>
    <delete file="_revision.xml" failonerror="false" />

    <echo message="INFO: Using Subversion revision number: ${version.revision}"/>
  </target>

  <target name="git_get_revision" description="Gets the current revision number"></target>
  <target name="vss_get_revision" description="Gets the current revision number"></target>
  <target name="tfs_get_revision" description="Gets the current revision number"></target>
  <target name="vault_get_revision" description="Gets the current revision number"></target>

</project>